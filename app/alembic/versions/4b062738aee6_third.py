"""third

Revision ID: 4b062738aee6
Revises: 
Create Date: 2024-02-21 13:18:25.959474

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4b062738aee6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('competencies',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('professional', 'general', name='competencetypes'), nullable=False),
    sa.Column('index', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(as_uuid=False), server_default=sa.text('gen_random_uuid()::uuid'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("(timezone('utc', now()))"), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_competencies_id'), 'competencies', ['id'], unique=False)
    op.create_table('disciplines',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('index', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(as_uuid=False), server_default=sa.text('gen_random_uuid()::uuid'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("(timezone('utc', now()))"), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_disciplines_id'), 'disciplines', ['id'], unique=False)
    op.create_table('qualification_commission_members',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('surname', sa.String(), nullable=False),
    sa.Column('patronymic', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(as_uuid=False), server_default=sa.text('gen_random_uuid()::uuid'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("(timezone('utc', now()))"), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_qualification_commission_members_id'), 'qualification_commission_members', ['id'], unique=False)
    op.create_table('qualifications',
    sa.Column('index', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(as_uuid=False), server_default=sa.text('gen_random_uuid()::uuid'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("(timezone('utc', now()))"), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_qualifications_id'), 'qualifications', ['id'], unique=False)
    op.create_table('users',
    sa.Column('login', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('surname', sa.String(), nullable=False),
    sa.Column('patronymic', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('student', 'teacher', 'admin', name='userroles'), nullable=False),
    sa.Column('is_blocked', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(as_uuid=False), server_default=sa.text('gen_random_uuid()::uuid'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("(timezone('utc', now()))"), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_login'), 'users', ['login'], unique=True)
    op.create_table('groups',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('qualification_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('id', sa.UUID(as_uuid=False), server_default=sa.text('gen_random_uuid()::uuid'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("(timezone('utc', now()))"), nullable=False),
    sa.ForeignKeyConstraint(['qualification_id'], ['qualifications.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_groups_id'), 'groups', ['id'], unique=False)
    op.create_table('qualification_competencies',
    sa.Column('qualification_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('competencies_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('id', sa.UUID(as_uuid=False), server_default=sa.text('gen_random_uuid()::uuid'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("(timezone('utc', now()))"), nullable=False),
    sa.ForeignKeyConstraint(['competencies_id'], ['competencies.id'], ),
    sa.ForeignKeyConstraint(['qualification_id'], ['qualifications.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_qualification_competencies_id'), 'qualification_competencies', ['id'], unique=False)
    op.create_table('themes',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('discipline_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('id', sa.UUID(as_uuid=False), server_default=sa.text('gen_random_uuid()::uuid'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("(timezone('utc', now()))"), nullable=False),
    sa.ForeignKeyConstraint(['discipline_id'], ['disciplines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_themes_id'), 'themes', ['id'], unique=False)
    op.create_table('exams',
    sa.Column('discipline_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('teacher_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('group_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('semester', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(as_uuid=False), server_default=sa.text('gen_random_uuid()::uuid'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("(timezone('utc', now()))"), nullable=False),
    sa.ForeignKeyConstraint(['discipline_id'], ['disciplines.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exams_id'), 'exams', ['id'], unique=False)
    op.create_table('group_students',
    sa.Column('student_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('group_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('id', sa.UUID(as_uuid=False), server_default=sa.text('gen_random_uuid()::uuid'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("(timezone('utc', now()))"), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('student_id')
    )
    op.create_index(op.f('ix_group_students_id'), 'group_students', ['id'], unique=False)
    op.create_table('qualification_exams',
    sa.Column('discipline_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('teacher_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('group_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('semester', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(as_uuid=False), server_default=sa.text('gen_random_uuid()::uuid'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("(timezone('utc', now()))"), nullable=False),
    sa.ForeignKeyConstraint(['discipline_id'], ['disciplines.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_qualification_exams_id'), 'qualification_exams', ['id'], unique=False)
    op.create_table('questions',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('is_task_question', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('theme_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('id', sa.UUID(as_uuid=False), server_default=sa.text('gen_random_uuid()::uuid'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("(timezone('utc', now()))"), nullable=False),
    sa.ForeignKeyConstraint(['theme_id'], ['themes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_questions_id'), 'questions', ['id'], unique=False)
    op.create_table('qualification_exams_members',
    sa.Column('qualification_exam_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('commission_member_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('id', sa.UUID(as_uuid=False), server_default=sa.text('gen_random_uuid()::uuid'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("(timezone('utc', now()))"), nullable=False),
    sa.ForeignKeyConstraint(['commission_member_id'], ['qualification_commission_members.id'], ),
    sa.ForeignKeyConstraint(['qualification_exam_id'], ['qualification_exams.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_qualification_exams_members_id'), 'qualification_exams_members', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_qualification_exams_members_id'), table_name='qualification_exams_members')
    op.drop_table('qualification_exams_members')
    op.drop_index(op.f('ix_questions_id'), table_name='questions')
    op.drop_table('questions')
    op.drop_index(op.f('ix_qualification_exams_id'), table_name='qualification_exams')
    op.drop_table('qualification_exams')
    op.drop_index(op.f('ix_group_students_id'), table_name='group_students')
    op.drop_table('group_students')
    op.drop_index(op.f('ix_exams_id'), table_name='exams')
    op.drop_table('exams')
    op.drop_index(op.f('ix_themes_id'), table_name='themes')
    op.drop_table('themes')
    op.drop_index(op.f('ix_qualification_competencies_id'), table_name='qualification_competencies')
    op.drop_table('qualification_competencies')
    op.drop_index(op.f('ix_groups_id'), table_name='groups')
    op.drop_table('groups')
    op.drop_index(op.f('ix_users_login'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_qualifications_id'), table_name='qualifications')
    op.drop_table('qualifications')
    op.drop_index(op.f('ix_qualification_commission_members_id'), table_name='qualification_commission_members')
    op.drop_table('qualification_commission_members')
    op.drop_index(op.f('ix_disciplines_id'), table_name='disciplines')
    op.drop_table('disciplines')
    op.drop_index(op.f('ix_competencies_id'), table_name='competencies')
    op.drop_table('competencies')
    # ### end Alembic commands ###
