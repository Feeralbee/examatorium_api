"""some

Revision ID: 11d04469ec58
Revises: 560aa571c61f
Create Date: 2024-06-11 17:01:43.643401

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '11d04469ec58'
down_revision = '560aa571c61f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('course_works',
    sa.Column('discipline_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('teacher_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('group_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('id', sa.UUID(as_uuid=False), server_default=sa.text('gen_random_uuid()::uuid'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("(timezone('utc', now()))"), nullable=False),
    sa.ForeignKeyConstraint(['discipline_id'], ['disciplines.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['teacher_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_course_works_id'), 'course_works', ['id'], unique=False)
    op.create_table('educational_practices',
    sa.Column('teacher_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('group_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('hours_count', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(as_uuid=False), server_default=sa.text('gen_random_uuid()::uuid'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("(timezone('utc', now()))"), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['teacher_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_educational_practices_id'), 'educational_practices', ['id'], unique=False)
    op.create_table('graduate_theses',
    sa.Column('group_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('id', sa.UUID(as_uuid=False), server_default=sa.text('gen_random_uuid()::uuid'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("(timezone('utc', now()))"), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_graduate_theses_id'), 'graduate_theses', ['id'], unique=False)
    op.drop_index('ix_qualification_exams_members_id', table_name='qualification_exams_members')
    op.drop_table('qualification_exams_members')
    op.drop_index('ix_qualification_commission_members_id', table_name='qualification_commission_members')
    op.drop_table('qualification_commission_members')
    op.drop_index('ix_qualification_exams_id', table_name='qualification_exams')
    op.drop_table('qualification_exams')
    op.add_column('groups', sa.Column('speciality', sa.String(), nullable=False))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('groups', 'speciality')
    op.create_table('qualification_exams_members',
    sa.Column('qualification_exam_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('commission_member_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, now())"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['commission_member_id'], ['qualification_commission_members.id'], name='qualification_exams_members_commission_member_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['qualification_exam_id'], ['qualification_exams.id'], name='qualification_exams_members_qualification_exam_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='qualification_exams_members_pkey')
    )
    op.create_index('ix_qualification_exams_members_id', 'qualification_exams_members', ['id'], unique=False)
    op.create_table('qualification_exams',
    sa.Column('discipline_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('teacher_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('group_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('semester', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, now())"), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['discipline_id'], ['disciplines.id'], name='qualification_exams_discipline_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name='qualification_exams_group_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['teacher_id'], ['users.id'], name='qualification_exams_teacher_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='qualification_exams_pkey')
    )
    op.create_index('ix_qualification_exams_id', 'qualification_exams', ['id'], unique=False)
    op.create_table('qualification_commission_members',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('surname', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('patronymic', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text("timezone('utc'::text, now())"), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='qualification_commission_members_pkey')
    )
    op.create_index('ix_qualification_commission_members_id', 'qualification_commission_members', ['id'], unique=False)
    op.drop_index(op.f('ix_graduate_theses_id'), table_name='graduate_theses')
    op.drop_table('graduate_theses')
    op.drop_index(op.f('ix_educational_practices_id'), table_name='educational_practices')
    op.drop_table('educational_practices')
    op.drop_index(op.f('ix_course_works_id'), table_name='course_works')
    op.drop_table('course_works')
    # ### end Alembic commands ###
